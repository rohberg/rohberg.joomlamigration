# joomlamysql.cfg

[transmogrifier]
pipeline =
    sqlalchemysource

    path_inserter
    path_modifier
    type_inserter
    # id_inserter
    id_deleter
    effective_inserter
    transitions_inserter
    language_inserter
    description_inserter
    body_inserter

    # logger

    createlinkedimages
    
    folders
    pagetype_inserter
    constructor
    schemaupdater
    
    logger
    

[sqlalchemysource]
blueprint=transmogrify.sqlalchemy
dsn=mysql://dbuser:dbpassword@dbhost:3306/dbname
query_content=SELECT CAT.path, CAT.title as cat_title, CON.*
    FROM joomla_effretikon_categories CAT
    JOIN joomla_effretikon_content CON
    ON CAT.id = CON.catid
    WHERE CAT.extension='com_content' AND CAT.published=1 AND (CON.state=1 OR CON.state=2)
    ORDER BY CAT.path, CON.ordering
    ;
    # LIMIT 100;


[path_inserter]
# Append id/alias to path if not already appended
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:(item['path'].endswith('/'+item['alias']) or item['path']==item['alias']) and item['path'] or '{}/{}'.format(item['path'], item['alias'])

[path_modifier]
# TODO
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
# value = python:item['_path'].replace("ä","a").replace("ö","o").replace("ü","i").replace(" ","-")
value = python:item['_path'].translate(item['_path'].maketrans("äöü ", "aou-", "!_?%&"))

[type_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:zhkathpage

# [id_inserter]
# blueprint = collective.transmogrifier.sections.inserter
# key = string:id
# value = string:${item/alias}
[id_deleter]
blueprint = collective.transmogrifier.sections.manipulator
delete = id

[transitions_inserter]
# state 1: published, state 2: archived
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = string:publish
condition = python:item['state']==1

[effective_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:effective
value = python:item['publish_up']

[language_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:language
value = string:de

[description_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:description
value = string:${item/metadesc}

[body_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:text
value = string:${item/introtext}${item/fulltext}

# [order_inserter]
# blueprint = collective.transmogrifier.sections.inserter
# key = string:dontknowwheretoput
# value = string:${item/ordering}


# #####
# custom project configuration
# #####
[pagetype_inserter]
blueprint = collective.transmogrifier.sections.inserter
key = string:pagetype
value = string:Seite
condition = python:not (item['_path'].startswith('angebote/aktuelles') or item['_path'].startswith('news') or item['_path'].startswith('angebote/ruckblick'))


# [fetch_html_images]
# blueprint = transmogrify.wordpress.blueprints.html_image_source
# key = text
# path = string:${item/_path}

[createlinkedimages]
blueprint = rohberg.joomlamigration.createlinkedimages
textsource = string:text
sourcedomain = string:https://effretikonjoomla2.rohberg.ch
targetcontainer_path = string:${item/_path}

# TODO images in gallery
# TODO link targets
# TODO Ordnung der Elemente im Ordner

# ok! images in text
# ok! TODO published / effective date
# ok? TODO pagetype Seite, wenn nicht in /news
# not necessary to import events. TODO events: date





[properties]
blueprint = collective.jsonmigrator.properties

[folders]
blueprint = collective.transmogrifier.sections.folders
folder-type = zhkathpage

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[workflow]
blueprint = plone.app.transmogrifier.workflowupdater

[reindex]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 3

[breaker]
blueprint = collective.transmogrifier.sections.breakpoint
condition = python: item['id'] == 'item-01'

[logger]
blueprint = collective.transmogrifier.sections.logger
name = JOOMLA LOGGER
level = INFO
key = _path, title, pagetype
# delete =
#     text
#     image
#     _datafield_image
#     _datafield_file
#     _permissions
#     introtext
#     fulltext
