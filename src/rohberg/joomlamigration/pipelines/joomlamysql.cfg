# joomlamysql.cfg

[transmogrifier]
pipeline =
    sqlalchemysource

    path_insertion
    type_insertion
    # id_insertion
    id_deleter
    transitions_insertion
    language_insertion
    description_insertion
    pagetype_insertion
    body_insertion

    # logger
    
    folders
    constructor
    schemaupdater
    
    logger
    

[sqlalchemysource]
blueprint=transmogrify.sqlalchemy
dsn=mysql://dbuser:dbpassword@dbhost:3306/dbname
# query_category_table=SELECT * FROM `n82wk_categories` 
#     WHERE extension='com_content' AND published=1
#     LIMIT 3;
# query_content_table=SELECT * FROM `n82wk_content` WHERE 1
#     LIMIT 3;

query_content=SELECT CAT.path, CAT.title as cat_title, CON.*
    FROM n82wk_categories CAT
    JOIN n82wk_content CON
    ON CAT.id = CON.catid
    WHERE CAT.extension='com_content' AND CAT.published=1 AND (CON.state=1 OR CON.state=2)
    ORDER BY CAT.path
    ;
    # LIMIT 100;


[path_insertion]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:(item['path'].endswith('/'+item['alias']) or item['path']==item['alias']) and item['path'] or '{}/{}'.format(item['path'], item['alias'])

[type_insertion]
blueprint = collective.transmogrifier.sections.inserter
key = string:_type
value = string:zhkathpage

# [id_insertion]
# blueprint = collective.transmogrifier.sections.inserter
# key = string:id
# value = string:${item/alias}
[id_deleter]
blueprint = collective.transmogrifier.sections.manipulator
delete = id

[transitions_insertion]
# state 1: published, state 2: archived
blueprint = collective.transmogrifier.sections.inserter
key = string:_transitions
value = string:publish
condition = python:item['state']==1

[effective_insertion]
blueprint = collective.transmogrifier.sections.inserter
key = string:effective
value = python:item['publish_up']

[language_insertion]
blueprint = collective.transmogrifier.sections.inserter
key = string:language
value = string:de

[description_insertion]
blueprint = collective.transmogrifier.sections.inserter
key = string:description
value = string:${item/metadesc}

[body_insertion]
blueprint = collective.transmogrifier.sections.inserter
key = string:text
value = string:${item/introtext}${item/fulltext}

# [order_insertion]
# blueprint = collective.transmogrifier.sections.inserter
# key = string:dontknowwheretoput
# value = string:${item/ordering}


# #####
# custom project configuration
# #####
[pagetype_insertion]
blueprint = collective.transmogrifier.sections.inserter
key = string:pagetype
value = string:Seite
condition = python:item['path'] != 'angebote/aktuelles'


# TODO images
# TODO link targets
# TODO Ordnung der Elemente im Ordner

# ok? TODO published / effective date
# ok? TODO pagetype Seite, wenn nicht in /news
# not necessary to import events. TODO events: date



[properties]
blueprint = collective.jsonmigrator.properties

[folders]
blueprint = collective.transmogrifier.sections.folders
folder-type = zhkathpage

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[workflow]
blueprint = plone.app.transmogrifier.workflowupdater

[reindex]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 3

[breaker]
blueprint = collective.transmogrifier.sections.breakpoint
condition = python: item['id'] == 'item-01'

[logger]
blueprint = collective.transmogrifier.sections.logger
name = JOOMLA LOGGER
level = INFO
key = id, _path, _type
# delete =
#     text
#     image
#     _datafield_image
#     _datafield_file
#     _permissions
#     introtext
#     fulltext
