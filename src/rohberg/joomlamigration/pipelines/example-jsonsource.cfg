[transmogrifier]
pipeline =
    jsonsource

    # properties

# Add base folders if missing.
    folders
# Construct Dexterity content if missing.
    constructor
# Update Dexterity schema values.
    schemaupdater
# Reindex.
    reindex
# Make a savepoint every 10 items.
    savepoint

    printer1

[splitter]
blueprint = collective.transmogrifier.sections.splitter

pipeline-document-condition = python:item.get('portal_type', False) == 'Document'
pipeline-document =
# Add base folders if missing.
    folders
# Construct Dexterity content if missing.
    constructor
# Reindex.
    reindex
# Make a savepoint every 10 items.
    savepoint

pipeline-news-condition = python:item.get('portal_type', False) == 'News Item'
pipeline-news =
# Add base folders if missing.
    folders
# Construct Dexterity content if missing.
    constructor
# # Reindex.
#     reindex
# # Make a savepoint every 10 items.
#     savepoint
    

[jsonsource]
blueprint = collective.jsonmigrator.jsonsource
path = /Users/ksuess/Transmogrifier/dummycontent/jsonsourcecontent 

[properties]
blueprint = collective.jsonmigrator.properties

[folders]
blueprint = collective.transmogrifier.sections.folders

[constructor]
blueprint = collective.transmogrifier.sections.constructor

[schemaupdater]
blueprint = transmogrify.dexterity.schemaupdater

[workflow]
blueprint = plone.app.transmogrifier.workflowupdater

[reindex]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 3

[printer1]
blueprint = collective.transmogrifier.sections.logger
name = my jsonsource logger
level = INFO
delete =
    text
    image
    _datafield_image
    _datafield_file
    _permissions

[printer2]
blueprint = collective.transmogrifier.sections.logger
name = my jsonsource logger 2
level = INFO
delete =
    text
    image
    _datafield_image
    _datafield_file
    _permissions
